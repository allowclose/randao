// geth --dev --genesis genesis_block.json --datadir ./data  console 2>> out.log.geth

console.log("unlocking")
personal.unlockAccount(web3.eth.accounts[0], "Write here a good, randomly generated, passphrase!")
personal.unlockAccount(web3.eth.accounts[1], "Write here a good, randomly generated, passphrase!")

var mined = 0;
var _defaultServiceProvider = web3.eth.accounts[0]/* var of type address here */ ;
var _daoCreator = web3.eth.accounts[1]/* var of type address here */ ;

var abi = [{ "constant": false, "inputs": [{ "name": "_campaignID", "type": "uint32" }, { "name": "_s", "type": "uint256" }], "name": "reveal", "outputs": [], "type": "function" }, { "constant": false, "inputs": [{ "name": "_campaignID", "type": "uint32" }], "name": "checkSettled", "outputs": [{ "name": "settled", "type": "bool" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "_bnum", "type": "uint32" }, { "name": "_deposit", "type": "uint96" }, { "name": "_commitDeadline", "type": "uint8" }, { "name": "_commitBalkline", "type": "uint8" }], "name": "newCampaign", "outputs": [{ "name": "_campaignID", "type": "uint32" }], "type": "function" }, { "constant": true, "inputs": [], "name": "numCampaigns", "outputs": [{ "name": "", "type": "uint32" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "_campaignID", "type": "uint32" }, { "name": "_hs", "type": "bytes32" }], "name": "commit", "outputs": [], "type": "function" }, { "constant": true, "inputs": [], "name": "version", "outputs": [{ "name": "", "type": "uint8" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "_campaignID", "type": "uint32" }], "name": "getRandom", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "constant": true, "inputs": [], "name": "callbackFee", "outputs": [{ "name": "", "type": "uint96" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "_campaignID", "type": "uint32" }], "name": "getCommitment", "outputs": [{ "name": "", "type": "bytes32" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "_str", "type": "bytes" }, { "name": "_index", "type": "uint256" }, { "name": "_size", "type": "uint256" }], "name": "slice", "outputs": [{ "name": "", "type": "bytes" }], "type": "function" }, { "constant": true, "inputs": [{ "name": "", "type": "uint32" }], "name": "campaigns", "outputs": [{ "name": "bnum", "type": "uint32" }, { "name": "deposit", "type": "uint96" }, { "name": "commitDeadline", "type": "uint8" }, { "name": "commitBalkline", "type": "uint8" }, { "name": "reveals", "type": "uint16" }, { "name": "random", "type": "uint256" }, { "name": "settled", "type": "bool" }, { "name": "bountypot", "type": "uint96" }, { "name": "commitNum", "type": "uint32" }], "type": "function" }, { "inputs": [], "type": "constructor" }, { "anonymous": false, "inputs": [{ "indexed": false, "name": "campaignID", "type": "uint256" }, { "indexed": false, "name": "bnum", "type": "uint32" }, { "indexed": false, "name": "deposit", "type": "uint96" }, { "indexed": false, "name": "commitDeadline", "type": "uint8" }, { "indexed": false, "name": "commitBalkline", "type": "uint8" }], "name": "CampaignAdded", "type": "event" }];
var binary = "6060604052600280546001606060020a03191667016345785d8a0000179055610c7a8061002c6000396000f36060604052361561008d5760e060020a600035046305c6d0b7811461008f5780630a8acd9d146100d45780630db472cf146101a85780632c0f7b6f146102d357806340f84925146102e257806354fd4d50146103a457806378bb6095146103ac57806391ff7865146103e9578063b6c472b6146103fb578063e00413961461043f578063eb81b527146104ce575b005b61008d60043560243563ffffffff821660009081526001602052604081208054909190819064010000000090046001606060020a03163410156107675734915061077f565b63ffffffff6004358181166000908152600160205260408120805461042d9416431061083f57600281015460ff16151561083f5761083f815b60028101805460ff1916600117905580546000609060020a90910461ffff161115610a225780546004820154609060020a90910461ffff161415610920576109208160005b6004820154811015610bf2576004820180546005840191600091849081101561000257908252602080832090910154600160a060020a031682529190915260409020546001838101805490921890915501610152565b610556600435602435604435606435600080805260016020818152825463ffffffff1980821663ffffffff9283169094019390931784557fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb498054608860020a870271ff000000000000000000000000000000000019608060020a8a0270ff00000000000000000000000000000000196401000000008d026fffffffffffffffffffffffff0000000019959099168e17949094169790971792909216959095171693909317835560408051858152918916928201929092526001606060020a0387168183015260ff86811660608301528516608082015290517f7bae521b658ca9d8a2e5d18ae0fc9529b3b67a05e13a8c958411a9979fe2d2d79181900360a00190a150949350505050565b61055660005463ffffffff1681565b63ffffffff6004358181166000908152600160205260409020805461008d936024359291608860020a810460ff169082160316431080159061033857508054608060020a810460ff1663ffffffff918216031643105b1561067a57816000141580156103695750600160a060020a0333166000908152600582016020526040812060010154145b1561068a576004810180546001810180835533929190829082801582901161069357818360005260206000209182019101610693919061074f565b610570600181565b63ffffffff6004358181166000908152600160205260408120805461042d9416431061085057600281015460ff1615156108b8576108b88161010d565b6105876002546001606060020a031681565b63ffffffff60043516600090815260016020818152604080842033600160a060020a0316855260050190915290912001545b60408051918252519081900360200190f35b6105a46004808035906020019082018035906020019191908080601f016020809104026020016040519081016040528093929190818152602001838380828437509496505093359350506044359150505b60408051602081810183526000808352835191820190935282815290919081848114806104c05750865185870110155b156108cd57865192506108d3565b60016020819052600435600090815260409020908101548154600292909201546106129263ffffffff8181169364010000000083046001606060020a0390811694608060020a850460ff90811695608860020a8104821695609060020a90910461ffff169493918316926101008104909216916d010000000000000000000000000090041689565b6040805163ffffffff929092168252519081900360200190f35b6040805160ff929092168252519081900360200190f35b604080516001606060020a03929092168252519081900360200190f35b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f1680156106045780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6040805163ffffffff9a8b1681526001606060020a03998a16602082015260ff9889168183015296909716606087015261ffff94909416608086015260a085019290925260c084015290931660e0820152919092166101008201529051908190036101200190f35b610730345b610bab5b3a60640290565b6107303461067f565b505050815481101561000257600091825260208083209091018054600160a060020a03191690931790925560408051808201825282815280840186815233600160a060020a0316845260058601909452912090518155905160019182015560028201805470ffffffff000000000000000000000000001981166d01000000000000000000000000009182900463ffffffff16909301029190911790555b505050565b601f016020900490600052602060002090810190610ae791905b80821115610763576000815560010161074f565b5090565b825464010000000090046001606060020a0316340391505b825463ffffffff16431080156107aa57508254608060020a810460ff1663ffffffff91821603164310155b1561082f5750600160a060020a0333166000908152600583016020908152604080519281902060018101548785529151938490039092019092209091141561082f5783816000016000505414151561082b578254609060020a80820461ffff166001010273ffff000000000000000000000000000000000000199091161783555b8381555b6108388261067f565b5050505050565b600281015460ff1691505b50919050565b6002546001606060020a031634106108c4576108b881604060405190810160405280338152602001610a256000368080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505060946004610490565b6001810154915061084a565b6108b83461067f565b85850192505b50845b8281101561091657868181518110156100025790602001015160f860020a900460f860020a028287830381518110156100025701602001526001016108d6565b5095945050505050565b600181015460009011156109bc576109bc816000805b600383015482101561073057600383018054839081101561000257906000526020600020906002020160005080546001858101546040518483018054959650600160a060020a0394909416949192909182918591600291811615610100026000190116048015610c4d5780601f10610c2257610100808354040283529160200191610c4d565b610a2281805460028201543a60640291609060020a900461ffff166101009091046001606060020a03160460005b6004840154811015610bf6576004840180548290811015610002576000918252602082200154600160a060020a031690610bfc610683565b50565b9052600382018054600181018083558290828015829011610a5f57600202816002028360005260206000209182019101610a5f9190610aed565b5050508154811015610002576000918252602080832060029283020180548551600160a060020a0319919091161781558482015180516001838101805481895297869020949790969181161561010002600019011604601f90810185900484019491939290910190839010610b3157805160ff19168380011785555b50610b6192915061074f565b50506001015b80821115610763578054600160a060020a031916815560018181018054600080835592600290821615610100026000190190911604601f8190106107355750610ae7565b82800160010185558215610adb579182015b82811115610adb578251826000505591602001919060010190610b43565b5050905050610b6e610683565b6002820180546101008082046001606060020a0390811694163403939093019092026cffffffffffffffffffffffff001990921691909117905550565b6001606060020a0316811115610a225733600160a060020a03166000610bcf610683565b6040516001606060020a03919091168403906000818181858888f1505050505050565b5050565b50505050565b6040519085036001606060020a0316906000818181858888f150505050506001016109ea565b820191906000526020600020905b815481529060010190602001808311610c3057829003601f168201915b5050828152602001925050506000604051808303816000866161da5a03f15050506001919091019061093656";

var salaryInfoContract = web3.eth.contract(abi);

var deposit = web3.toWei('2', 'ether');
var target_block = web3.eth.blockNumber + 15;

var salaryInfo = salaryInfoContract.new(
   _defaultServiceProvider,
   {
     from: web3.eth.accounts[0],
     data: binary,
     gas: 3000000,
     gasPrice: 500000000000
   }, function(e, contract){
    console.log(e, contract);
    if (typeof contract.address != 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
         mined = 1
    }
 })

console.log("mining contract plz wait")
miner.start(1); admin.sleepBlocks(1); miner.stop();
